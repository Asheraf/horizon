/***************************************************
 *       _   _            _                        *
 *      | | | |          (_)                       *
 *      | |_| | ___  _ __ _ _______  _ __          *
 *      |  _  |/ _ \| '__| |_  / _ \| '_  \        *
 *      | | | | (_) | |  | |/ / (_) | | | |        *
 *      \_| |_/\___/|_|  |_/___\___/|_| |_|        *
 ***************************************************
 * This file is part of Horizon (c).
 * Copyright (c) 2020- Horizon Dev Team.
 *
 * Base Author - Sagun Khosla. (sagunxp@gmail.com)
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 **************************************************/

#ifndef HORIZON_ZONE_CLIENT_PACKET_LENGTH_TABLE_20090114
#define HORIZON_ZONE_CLIENT_PACKET_LENGTH_TABLE_20090114

#include "Core/Multithreading/LockedLookupTable.hpp"

#include "Default.hpp"

#include <utility>

namespace Horizon
{
namespace Zone
{
/**
 * @brief Client Packet Length Table object that stores
 * the packet length of each packet of this client version.
 * Packets with IDs already existent in the database are over-written.
 * The data is stored in a thread-safe lookup table.
 * RAII techinque ensures that the table is populated on instantiation.
 */
class ClientPacketLengthTable : public PacketLengthTable
{
public:
	ClientPacketLengthTable(std::shared_ptr<ZoneSession> s)
	: PacketLengthTable(s)
	{
#define ADD_HPKT(i, j, k) _hpacket_length_table.insert(i, std::make_pair(j, std::make_shared<k>(s)))
#define ADD_TPKT(i, j, k) _tpacket_length_table.insert(i, std::make_pair(j, std::make_shared<k>(s)))
		ADD_HPKT(0x00e6, 57, CZ_ACK_EXCHANGE_ITEM);
		ADD_HPKT(0x0208, 26, CZ_ACK_REQ_ADD_FRIENDS);
		ADD_HPKT(0x00c5, 6, CZ_ACK_SELECT_DEALTYPE);
		ADD_HPKT(0x0202, -1, CZ_ADD_FRIENDS);
		ADD_HPKT(0x0217, 44, CZ_BLACKSMITH_RANK);
		ADD_HPKT(0x00ed, 8, CZ_CANCEL_EXCHANGE_ITEM);
		ADD_HPKT(0x0118, -1, CZ_CANCEL_LOCKON);
		ADD_HPKT(0x00de, 282, CZ_CHANGE_CHATROOM);
		ADD_HPKT(0x0361, 6, CZ_CHANGE_DIRECTION2);
		ADD_HPKT(0x019d, -1, CZ_CHANGE_EFFECTSTATE);
		ADD_HPKT(0x0102, 30, CZ_CHANGE_GROUPEXPOPTION);
		ADD_HPKT(0x00b8, 2, CZ_CHOOSE_MENU);
		ADD_HPKT(0x0146, -1, CZ_CLOSE_DIALOG);
		ADD_HPKT(0x022d, -1, CZ_COMMAND_MER);
		ADD_HPKT(0x00eb, -1, CZ_CONCLUDE_EXCHANGE_ITEM);
		ADD_HPKT(0x0090, -1, CZ_CONTACTNPC);
		ADD_HPKT(0x00d5, -1, CZ_CREATE_CHATROOM);
		ADD_HPKT(0x00cc, 8, CZ_DISCONNECT_CHARACTER);
		ADD_HPKT(0x01e7, -1, CZ_DORIDORI);
		ADD_HPKT(0x0436, 14, CZ_ENTER2);
		ADD_HPKT(0x00ef, -1, CZ_EXEC_EXCHANGE_ITEM);
		ADD_HPKT(0x00e3, -1, CZ_EXIT_ROOM);
		ADD_HPKT(0x017e, 6, CZ_GUILD_CHAT);
		ADD_HPKT(0x016e, 97, CZ_GUILD_NOTICE);
		ADD_HPKT(0x0143, 22, CZ_INPUT_EDITDLG);
		ADD_HPKT(0x01d5, 14, CZ_INPUT_EDITDLGSTR);
		ADD_HPKT(0x02f6, -1, CZ_IRMAIL_LIST);
		ADD_HPKT(0x013f, 6, CZ_ITEM_CREATE);
		ADD_HPKT(0x0362, 15, CZ_ITEM_PICKUP2);
		ADD_HPKT(0x0363, 4, CZ_ITEM_THROW2);
		ADD_HPKT(0x00ff, 3, CZ_JOIN_GROUP);
		ADD_HPKT(0x016b, 30, CZ_JOIN_GUILD);
		ADD_HPKT(0x0237, 2, CZ_KILLER_RANK);
		ADD_HPKT(0x019c, -1, CZ_LOCALBROADCAST);
		ADD_HPKT(0x01e8, 14, CZ_MAKE_GROUP2);
		ADD_HPKT(0x0140, 4, CZ_MOVETO_MAP);
		ADD_HPKT(0x0126, -1, CZ_MOVE_ITEM_FROM_BODY_TO_CART);
		ADD_HPKT(0x0364, 14, CZ_MOVE_ITEM_FROM_BODY_TO_STORE2);
		ADD_HPKT(0x0127, -1, CZ_MOVE_ITEM_FROM_CART_TO_BODY);
		ADD_HPKT(0x0129, -1, CZ_MOVE_ITEM_FROM_CART_TO_STORE);
		ADD_HPKT(0x0128, 29, CZ_MOVE_ITEM_FROM_STORE_TO_CART);
		ADD_HPKT(0x007d, -1, CZ_NOTIFY_ACTORINIT);
		ADD_HPKT(0x00c8, -1, CZ_PC_PURCHASE_ITEMLIST);
		ADD_HPKT(0x0134, 6, CZ_PC_PURCHASE_ITEMLIST_FROMMC);
		ADD_HPKT(0x00c9, 15, CZ_PC_SELL_ITEMLIST);
		ADD_HPKT(0x0161, 30, CZ_REG_CHANGE_GUILD_POSITIONINFO);
		ADD_HPKT(0x01ba, 30, CZ_REMOVE_AID);
		ADD_HPKT(0x0368, 30, CZ_REQNAME2);
		ADD_HPKT(0x0369, -1, CZ_REQNAME_BYGID2);
		ADD_HPKT(0x0233, 6, CZ_REQUEST_ACTNPC);
		ADD_HPKT(0x0232, -1, CZ_REQUEST_MOVENPC);
		ADD_HPKT(0x0360, 11, CZ_REQUEST_TIME2);
		ADD_HPKT(0x0170, -1, CZ_REQ_ALLY_GUILD);
		ADD_HPKT(0x0130, 30, CZ_REQ_BUY_FROMMC);
		ADD_HPKT(0x012a, -1, CZ_REQ_CARTOFF);
		ADD_HPKT(0x0155, -1, CZ_REQ_CHANGE_MEMBERPOS);
		ADD_HPKT(0x012e, -1, CZ_REQ_CLOSESTORE);
		ADD_HPKT(0x018a, 2, CZ_REQ_DISCONNECT);
		ADD_HPKT(0x00bf, 6, CZ_REQ_EMOTION);
		ADD_HPKT(0x0103, 11, CZ_REQ_EXPEL_GROUP_MEMBER);
		ADD_HPKT(0x00e2, 7, CZ_REQ_EXPEL_MEMBER);
		ADD_HPKT(0x014f, 182, CZ_REQ_GUILD_MENU);
		ADD_HPKT(0x014d, -1, CZ_REQ_GUILD_MENUINTERFACE);
		ADD_HPKT(0x017c, -1, CZ_REQ_ITEMCOMPOSITION);
		ADD_HPKT(0x017a, -1, CZ_REQ_ITEMCOMPOSITION_LIST);
		ADD_HPKT(0x0178, 6, CZ_REQ_ITEMIDENTIFY);
		ADD_HPKT(0x01fd, 53, CZ_REQ_ITEMREPAIR);
		ADD_HPKT(0x00fc, 3, CZ_REQ_JOIN_GROUP);
		ADD_HPKT(0x0168, -1, CZ_REQ_JOIN_GUILD);
		ADD_HPKT(0x0100, -1, CZ_REQ_LEAVE_GROUP);
		ADD_HPKT(0x01ae, 11, CZ_REQ_MAKINGARROW);
		ADD_HPKT(0x00b9, -1, CZ_REQ_NEXT_SCRIPT);
		ADD_HPKT(0x01b2, 60, CZ_REQ_OPENSTORE2);
		ADD_HPKT(0x00e0, -1, CZ_REQ_ROLE_CHANGE);
		ADD_HPKT(0x00ab, 4, CZ_REQ_TAKEOFF_EQUIP);
		ADD_HPKT(0x00cf, 2, CZ_SETTING_WHISPER_PC);
		ADD_HPKT(0x01bb, -1, CZ_SHIFT);
		ADD_HPKT(0x00bb, 10, CZ_STATUS_CHANGE);
		ADD_HPKT(0x019f, 7, CZ_TRYCAPTURE_MONSTER);
		ADD_HPKT(0x0112, -1, CZ_UPGRADE_SKILLLEVEL);
		ADD_HPKT(0x0439, 28, CZ_USE_ITEM2);
		ADD_HPKT(0x0438, 3, CZ_USE_SKILL2);
		ADD_TPKT(0x0083, 10, ZC_ACCEPT_QUIT);
		ADD_TPKT(0x00ea, 6, ZC_ACK_ADD_EXCHANGE_ITEM);
		ADD_TPKT(0x015c, -1, ZC_ACK_BAN_GUILD);
		ADD_TPKT(0x00d6, -1, ZC_ACK_CREATE_CHATROOM);
		ADD_TPKT(0x00e7, 6, ZC_ACK_EXCHANGE_ITEM);
		ADD_TPKT(0x01f5, -1, ZC_ACK_EXCHANGE_ITEM2);
		ADD_TPKT(0x0188, -1, ZC_ACK_ITEMREFINING);
		ADD_TPKT(0x01fe, 10, ZC_ACK_ITEMREPAIR);
		ADD_TPKT(0x011e, 2, ZC_ACK_REMEMBER_WARPPOINT);
		ADD_TPKT(0x0194, -1, ZC_ACK_REQNAME_BYGID);
		ADD_TPKT(0x018b, -1, ZC_ACK_REQ_DISCONNECT);
		ADD_TPKT(0x00fd, -1, ZC_ACK_REQ_JOIN_GROUP);
		ADD_TPKT(0x0169, -1, ZC_ACK_REQ_JOIN_GUILD);
		ADD_TPKT(0x0098, 8, ZC_ACK_WHISPER);
		ADD_TPKT(0x013b, 8, ZC_ACTION_FAILURE);
		ADD_TPKT(0x0124, -1, ZC_ADD_ITEM_TO_CART);
		ADD_TPKT(0x01c5, 2, ZC_ADD_ITEM_TO_CART2);
		ADD_TPKT(0x00f4, 26, ZC_ADD_ITEM_TO_STORE);
		ADD_TPKT(0x01c4, -1, ZC_ADD_ITEM_TO_STORE2);
		ADD_TPKT(0x0104, 6, ZC_ADD_MEMBER_TO_GROUP);
		ADD_TPKT(0x01e9, 55, ZC_ADD_MEMBER_TO_GROUP2);
		ADD_TPKT(0x01cd, 33, ZC_AUTOSPELLLIST);
		ADD_TPKT(0x0219, 2, ZC_BLACKSMITH_RANK);
		ADD_TPKT(0x009a, -1, ZC_BROADCAST);
		ADD_TPKT(0x01c3, 15, ZC_BROADCAST2);
		ADD_TPKT(0x00ee, -1, ZC_CANCEL_EXCHANGE_ITEM);
		ADD_TPKT(0x0122, 4, ZC_CART_EQUIPMENT_ITEMLIST);
		ADD_TPKT(0x0123, -1, ZC_CART_NORMAL_ITEMLIST);
		ADD_TPKT(0x01ef, 30, ZC_CART_NORMAL_ITEMLIST2);
		ADD_TPKT(0x0230, 5, ZC_CHANGESTATE_MER);
		ADD_TPKT(0x01a4, -1, ZC_CHANGESTATE_PET);
		ADD_TPKT(0x00df, 3, ZC_CHANGE_CHATROOM);
		ADD_TPKT(0x00b6, 6, ZC_CLOSE_DIALOG);
		ADD_TPKT(0x0144, 2, ZC_COMPASS);
		ADD_TPKT(0x00ec, 6, ZC_CONCLUDE_EXCHANGE_ITEM);
		ADD_TPKT(0x01ea, -1, ZC_CONGRATULATION);
		ADD_TPKT(0x020a, 4, ZC_DELETE_FRIENDS);
		ADD_TPKT(0x00f6, -1, ZC_DELETE_ITEM_FROM_STORE);
		ADD_TPKT(0x0105, -1, ZC_DELETE_MEMBER_FROM_GROUP);
		ADD_TPKT(0x00d8, -1, ZC_DESTROY_ROOM);
		ADD_TPKT(0x01cf, -1, ZC_DEVOTIONLIST);
		ADD_TPKT(0x00c0, 31, ZC_EMOTION);
		ADD_TPKT(0x00db, 8, ZC_ENTER_ROOM);
		ADD_TPKT(0x00a4, -1, ZC_EQUIPMENT_ITEMLIST);
		ADD_TPKT(0x013c, -1, ZC_EQUIP_ARROW);
		ADD_TPKT(0x022f, -1, ZC_FEED_MER);
		ADD_TPKT(0x01a3, 3, ZC_FEED_PET);
		ADD_TPKT(0x0201, 4, ZC_FRIENDS_LIST);
		ADD_TPKT(0x0227, 4, ZC_GAME_GUARD);
		ADD_TPKT(0x0101, 20, ZC_GROUPINFO_CHANGE);
		ADD_TPKT(0x00fb, 16, ZC_GROUP_LIST);
		ADD_TPKT(0x01b6, 13, ZC_GUILD_INFO2);
		ADD_TPKT(0x016f, 9, ZC_GUILD_NOTICE);
		ADD_TPKT(0x0162, 10, ZC_GUILD_SKILLINFO);
		ADD_TPKT(0x0239, 71, ZC_HOSKILLINFO_UPDATE);
		ADD_TPKT(0x02f5, 8, ZC_IRMAIL_NOTIFY);
		ADD_TPKT(0x017b, -1, ZC_ITEMCOMPOSITION_LIST);
		ADD_TPKT(0x0177, -1, ZC_ITEMIDENTIFY_LIST);
		ADD_TPKT(0x009d, 3, ZC_ITEM_ENTRY);
		ADD_TPKT(0x009e, 3, ZC_ITEM_FALL_ENTRY);
		ADD_TPKT(0x0238, 12, ZC_KILLER_RANK);
		ADD_TPKT(0x018d, 7, ZC_MAKABLEITEMLIST);
		ADD_TPKT(0x01ad, 14, ZC_MAKINGARROW_LIST);
		ADD_TPKT(0x00dd, -1, ZC_MEMBER_EXIT);
		ADD_TPKT(0x00dc, 4, ZC_MEMBER_NEWENTRY);
		ADD_TPKT(0x018c, -1, ZC_MONSTER_INFO);
		ADD_TPKT(0x043f, 25, ZC_MSG_STATE_CHANGE2);
		ADD_TPKT(0x010c, 8, ZC_MVP);
		ADD_TPKT(0x010b, -1, ZC_MVP_GETTING_SPECIAL_EXP);
		ADD_TPKT(0x014c, 2, ZC_MYGUILD_BASIC_INFO);
		ADD_TPKT(0x01ee, 11, ZC_NORMAL_ITEMLIST2);
		ADD_TPKT(0x008a, -1, ZC_NOTIFY_ACT);
		ADD_TPKT(0x02e1, 60, ZC_NOTIFY_ACT2);
		ADD_TPKT(0x007a, 6, ZC_NOTIFY_ACTENTRY);
		ADD_TPKT(0x0121, 67, ZC_NOTIFY_CARTITEM_COUNTINFO);
		ADD_TPKT(0x0109, 3, ZC_NOTIFY_CHAT_PARTY);
		ADD_TPKT(0x0117, 26, ZC_NOTIFY_GROUNDSKILL);
		ADD_TPKT(0x0106, -1, ZC_NOTIFY_HP_TO_GROUPM);
		ADD_TPKT(0x0075, -1, ZC_NOTIFY_INITCHAR);
		ADD_TPKT(0x0189, 6, ZC_NOTIFY_MAPINFO);
		ADD_TPKT(0x0199, 282, ZC_NOTIFY_MAPPROPERTY);
		ADD_TPKT(0x01d6, -1, ZC_NOTIFY_MAPPROPERTY2);
		ADD_TPKT(0x0086, -1, ZC_NOTIFY_MOVE);
		ADD_TPKT(0x01da, 4, ZC_NOTIFY_MOVEENTRY2);
		ADD_TPKT(0x022c, -1, ZC_NOTIFY_MOVEENTRY3);
		ADD_TPKT(0x02ec, 9, ZC_NOTIFY_MOVEENTRY4);
		ADD_TPKT(0x0079, 21, ZC_NOTIFY_NEWENTRY);
		ADD_TPKT(0x01d9, 54, ZC_NOTIFY_NEWENTRY2);
		ADD_TPKT(0x008e, 12, ZC_NOTIFY_PLAYERCHAT);
		ADD_TPKT(0x0087, -1, ZC_NOTIFY_PLAYERMOVE);
		ADD_TPKT(0x01eb, 59, ZC_NOTIFY_POSITION_TO_GUILDM);
		ADD_TPKT(0x0114, 10, ZC_NOTIFY_SKILL);
		ADD_TPKT(0x01de, 282, ZC_NOTIFY_SKILL2);
		ADD_TPKT(0x0078, -1, ZC_NOTIFY_STANDENTRY);
		ADD_TPKT(0x01d8, 7, ZC_NOTIFY_STANDENTRY2);
		ADD_TPKT(0x022a, -1, ZC_NOTIFY_STANDENTRY3);
		ADD_TPKT(0x007c, 2, ZC_NOTIFY_STANDENTRY_NPC);
		ADD_TPKT(0x0077, 7, ZC_NOTIFY_UPDATEPLAYER);
		ADD_TPKT(0x0091, -1, ZC_NPCACK_MAPMOVE);
		ADD_TPKT(0x0092, 3, ZC_NPCACK_SERVERMOVE);
		ADD_TPKT(0x012d, 13, ZC_OPENSTORE);
		ADD_TPKT(0x00b0, -1, ZC_PAR_CHANGE);
		ADD_TPKT(0x0287, 3, ZC_PC_CASH_POINT_ITEMLIST);
		ADD_TPKT(0x00c6, -1, ZC_PC_PURCHASE_ITEMLIST);
		ADD_TPKT(0x0136, -1, ZC_PC_PURCHASE_MYITEMLIST);
		ADD_TPKT(0x00ca, -1, ZC_PC_PURCHASE_RESULT);
		ADD_TPKT(0x013d, 3, ZC_RECOVERY);
		ADD_TPKT(0x00da, -1, ZC_REFUSE_ENTER_ROOM);
		ADD_TPKT(0x0171, 6, ZC_REQ_ALLY_GUILD);
		ADD_TPKT(0x00e5, 2, ZC_REQ_EXCHANGE_ITEM);
		ADD_TPKT(0x01f4, 8, ZC_REQ_EXCHANGE_ITEM2);
		ADD_TPKT(0x00fe, -1, ZC_REQ_JOIN_GROUP);
		ADD_TPKT(0x023a, 22, ZC_REQ_STORE_PASSWORD);
		ADD_TPKT(0x00ac, -1, ZC_REQ_TAKEOFF_EQUIP_ACK);
		ADD_TPKT(0x00aa, 26, ZC_REQ_WEAR_EQUIP_ACK);
		ADD_TPKT(0x00b3, -1, ZC_RESTART_ACK);
		ADD_TPKT(0x0167, 5, ZC_RESULT_MAKE_GUILD);
		ADD_TPKT(0x0148, -1, ZC_RESURRECTION);
		ADD_TPKT(0x00e1, 28, ZC_ROLE_CHANGE);
		ADD_TPKT(0x00c4, -1, ZC_SELECT_DEALTYPE);
		ADD_TPKT(0x00d2, 6, ZC_SETTING_WHISPER_STATE);
		ADD_TPKT(0x01b3, -1, ZC_SHOW_IMAGE2);
		ADD_TPKT(0x010f, 43, ZC_SKILLINFO_LIST);
		ADD_TPKT(0x0120, 12, ZC_SKILL_DISAPPEAR);
		ADD_TPKT(0x01c9, 79, ZC_SKILL_ENTRY2);
		ADD_TPKT(0x01ac, 6, ZC_SKILL_UPDATE);
		ADD_TPKT(0x01d0, -1, ZC_SPIRITS);
		ADD_TPKT(0x01e1, 7, ZC_SPIRITS2);
		ADD_TPKT(0x0119, -1, ZC_STATE_CHANGE);
		ADD_TPKT(0x00bd, 10, ZC_STATUS);
		ADD_TPKT(0x00be, 14, ZC_STATUS_CHANGE);
		ADD_TPKT(0x0088, 60, ZC_STOPMOVE);
		ADD_TPKT(0x0131, 5, ZC_STORE_ENTRY);
		ADD_TPKT(0x00a6, 18, ZC_STORE_EQUIPMENT_ITEMLIST);
		ADD_TPKT(0x0296, 6, ZC_STORE_EQUIPMENT_ITEMLIST2);
		ADD_TPKT(0x00a5, -1, ZC_STORE_NORMAL_ITEMLIST);
		ADD_TPKT(0x0226, 6, ZC_TAEKWON_RANK);
		ADD_TPKT(0x01a0, -1, ZC_TRYCAPTURE_MONSTER);
		ADD_TPKT(0x016d, -1, ZC_UPDATE_CHARSTAT);
		ADD_TPKT(0x01f2, -1, ZC_UPDATE_CHARSTAT2);
		ADD_TPKT(0x016c, -1, ZC_UPDATE_GDID);
		ADD_TPKT(0x00c2, 4, ZC_USER_COUNT);
		ADD_TPKT(0x013e, -1, ZC_USESKILL_ACK);
		ADD_TPKT(0x00a8, 27, ZC_USE_ITEM_ACK);
		ADD_TPKT(0x01c8, 4, ZC_USE_ITEM_ACK2);
		ADD_TPKT(0x011a, 8, ZC_USE_SKILL);
		ADD_TPKT(0x00b5, 6, ZC_WAIT_DIALOG);
		ADD_TPKT(0x0097, 10, ZC_WHISPER);
#undef ADD_TPKT
#undef ADD_HPKT
	}

	~ClientPacketLengthTable() { }

};
}
}
#endif /* HORIZON_ZONE_CLIENT_PACKET_LENGTH_TABLE_20090114 */